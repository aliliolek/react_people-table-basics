{"version":3,"sources":["pages/Layout/Layout.tsx","pages/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/LoadingError/LoadingError.tsx","pages/PersonPage/PersonPage.tsx","pages/PeopleTable/PeopleTable.tsx","pages/PeoplePage/PeoplePage.tsx","pages/PageNotFound/PageNotFound.tsx","Root.tsx","App.tsx","index.tsx"],"names":["Layout","isActiveClassName","isActive","classNames","className","role","to","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","LoadingError","PersonPage","person","name","born","died","fatherName","motherName","sex","slug","mother","father","personSlug","useParams","renderParrents","parrentPerson","parrentName","PeopleTable","people","map","PeoplePage","useState","setPeople","loading","setLoading","loadingError","setLoadingError","useEffect","peopleData","find","p","catch","length","PageNotFound","Root","path","element","index","replace","App","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.236210d5.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink, Outlet } from 'react-router-dom';\n\nexport const Layout = () => {\n  const isActiveClassName = ({ isActive }: { isActive: boolean }) => classNames(\n    'navbar-item',\n    { 'has-background-grey-lighter': isActive },\n  );\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={isActiveClassName}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={isActiveClassName}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export const LoadingError = () => {\n  return (\n    <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n      Something went wrong\n    </p>\n  );\n};\n","import { Link, useParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\nexport const PersonPage: React.FC<{ person: Person }> = ({\n  person: {\n    name,\n    born,\n    died,\n    fatherName,\n    motherName,\n    sex,\n    slug,\n    mother,\n    father,\n  },\n}) => {\n  const { personSlug } = useParams();\n\n  const renderParrents = (\n    parrentPerson: Person | null = null,\n    parrentName: string | null,\n  ) => {\n    if (parrentPerson) {\n      return (\n        <Link\n          className={parrentPerson.sex === 'f' ? 'has-text-danger' : ''}\n          to={parrentPerson.slug}\n        >\n          {parrentName}\n        </Link>\n      );\n    }\n\n    return parrentName || '-';\n  };\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={personSlug === slug ? 'has-background-warning' : ''}\n    >\n      <td>\n        <Link\n          to={`${slug}`}\n          className={sex === 'f' ? 'has-text-danger' : ''}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{ born }</td>\n      <td>{died}</td>\n      <td>\n        {renderParrents(mother, motherName)}\n      </td>\n      <td>\n        {renderParrents(father, fatherName)}\n      </td>\n    </tr>\n  );\n};\n","import { PersonPage } from '../PersonPage';\nimport { Person } from '../../types';\n\nexport const PeopleTable: React.FC<{ people: Person[] }> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table\n                is-striped\n                is-hoverable\n                is-narrow\n                is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonPage\n            key={person.slug}\n            person={person}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../../components/Loader';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { LoadingError } from '../../components/LoadingError';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingError, setLoadingError] = useState(false);\n\n  const loadPeople = () => {\n    setLoading(true);\n\n    getPeople()\n      .then(peopleData => {\n        setPeople([...peopleData.map((person) => ({\n          ...person,\n          father: person.fatherName\n            ? peopleData.find((p) => p.name === person.fatherName) : null,\n          mother: person.motherName\n            ? peopleData.find((p) => p.name === person.motherName) : null,\n        }))]);\n        setLoading(false);\n      })\n      .catch(() => {\n        setLoadingError(true);\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loading ? (\n            <Loader />\n          ) : (\n            <>\n              {loadingError ? (\n                <LoadingError />\n              ) : (\n                <>\n                  {people.length > 0 ? (\n                    <PeopleTable\n                      people={people}\n                    />\n                  ) : (\n                    <p data-cy=\"noPeopleMessage\">\n                      There are no people on the server\n                    </p>\n                  )}\n                </>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const PageNotFound = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport { Layout } from './pages/Layout';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { PageNotFound } from './pages/PageNotFound';\n\nexport const Root = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Layout />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route index element={<PeoplePage />} />\n          <Route path=\":personSlug\" element={<HomePage />} />\n        </Route>\n        <Route path=\"*\" element={<PageNotFound />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n      </Route>\n    </Routes>\n  );\n};\n","import './App.scss';\nimport { Root } from './Root';\n\nexport const App = () => (\n  <Root />\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}